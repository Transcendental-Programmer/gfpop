
R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R est un logiciel libre livré sans AUCUNE GARANTIE.
Vous pouvez le redistribuer sous certaines conditions.
Tapez 'license()' ou 'licence()' pour plus de détails.

R est un projet collaboratif avec de nombreux contributeurs.
Tapez 'contributors()' pour plus d'information et
'citation()' pour la façon de le citer dans les publications.

Tapez 'demo()' pour des démonstrations, 'help()' pour l'aide
en ligne ou 'help.start()' pour obtenir l'aide au format HTML.
Tapez 'q()' pour quitter R.

[Sauvegarde de la session précédente restaurée]

> #(method 1) ON GITHUB 
> #devtools::install_github("vrunge/gfpop", force = TRUE)
> 
> #(method 2) ON CRAN
> install.packages("gfpop")
Installation du package dans ‘/home/vrunge/R/x86_64-pc-linux-gnu-library/3.6’
(car ‘lib’ n'est pas spécifié)
essai de l'URL 'https://cloud.r-project.org/src/contrib/gfpop_1.0.2.tar.gz'
Content type 'application/x-gzip' length 432037 bytes (421 KB)
==================================================
downloaded 421 KB

* installing *source* package ‘gfpop’ ...
** package ‘gfpop’ correctement décompressé et sommes MD5 vérifiées
** using staged installation
** libs
g++ -std=gnu++11 -I"/usr/share/R/include" -DNDEBUG  -I"/home/vrunge/R/x86_64-pc-linux-gnu-library/3.6/Rcpp/include"   -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c Cost.cpp -o Cost.o
g++ -std=gnu++11 -I"/usr/share/R/include" -DNDEBUG  -I"/home/vrunge/R/x86_64-pc-linux-gnu-library/3.6/Rcpp/include"   -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c Data.cpp -o Data.o
g++ -std=gnu++11 -I"/usr/share/R/include" -DNDEBUG  -I"/home/vrunge/R/x86_64-pc-linux-gnu-library/3.6/Rcpp/include"   -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c Edge.cpp -o Edge.o
g++ -std=gnu++11 -I"/usr/share/R/include" -DNDEBUG  -I"/home/vrunge/R/x86_64-pc-linux-gnu-library/3.6/Rcpp/include"   -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c ExternFunctions.cpp -o ExternFunctions.o
g++ -std=gnu++11 -I"/usr/share/R/include" -DNDEBUG  -I"/home/vrunge/R/x86_64-pc-linux-gnu-library/3.6/Rcpp/include"   -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c Graph.cpp -o Graph.o
g++ -std=gnu++11 -I"/usr/share/R/include" -DNDEBUG  -I"/home/vrunge/R/x86_64-pc-linux-gnu-library/3.6/Rcpp/include"   -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c Interval.cpp -o Interval.o
g++ -std=gnu++11 -I"/usr/share/R/include" -DNDEBUG  -I"/home/vrunge/R/x86_64-pc-linux-gnu-library/3.6/Rcpp/include"   -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c ListPiece.cpp -o ListPiece.o
g++ -std=gnu++11 -I"/usr/share/R/include" -DNDEBUG  -I"/home/vrunge/R/x86_64-pc-linux-gnu-library/3.6/Rcpp/include"   -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c Omega.cpp -o Omega.o
g++ -std=gnu++11 -I"/usr/share/R/include" -DNDEBUG  -I"/home/vrunge/R/x86_64-pc-linux-gnu-library/3.6/Rcpp/include"   -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c Piece.cpp -o Piece.o
g++ -std=gnu++11 -I"/usr/share/R/include" -DNDEBUG  -I"/home/vrunge/R/x86_64-pc-linux-gnu-library/3.6/Rcpp/include"   -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c RcppExports.cpp -o RcppExports.o
g++ -std=gnu++11 -I"/usr/share/R/include" -DNDEBUG  -I"/home/vrunge/R/x86_64-pc-linux-gnu-library/3.6/Rcpp/include"   -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c Track.cpp -o Track.o
g++ -std=gnu++11 -I"/usr/share/R/include" -DNDEBUG  -I"/home/vrunge/R/x86_64-pc-linux-gnu-library/3.6/Rcpp/include"   -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c main.cpp -o main.o
g++ -std=gnu++11 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o gfpop.so Cost.o Data.o Edge.o ExternFunctions.o Graph.o Interval.o ListPiece.o Omega.o Piece.o RcppExports.o Track.o main.o -L/usr/lib/R/lib -lR
installing to /home/vrunge/R/x86_64-pc-linux-gnu-library/3.6/00LOCK-gfpop/00new/gfpop/libs
** R
** data
*** moving datasets to lazyload DB
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* DONE (gfpop)

Les packages source téléchargés sont dans
	‘/tmp/RtmpE4JsHM/downloaded_packages’
> library(gfpop)

Attachement du package : ‘gfpop’

The following object is masked _by_ ‘.GlobalEnv’:

    profile614chr2

> 
> library(ggplot2)
> 
> ### ### ### ### ### ### ### ### 
> ###  4. The gfpop package   ### 
> ### ### ### ### ### ### ### ### 
> 
> #-----------------------------------#
> ## chunk 1 : An example of edge #####
> #-----------------------------------#
> 
> e1 <- Edge(state1 = "Dw", state2 = "Up", type = "up", penalty = 10, gap = 0.5)
> e1
  state1 state2 type parameter penalty   K a min max
1     Dw     Up   up       0.5      10 Inf 0  NA  NA
> #-----------------------------------#
> ## chunk 2 : An example of graph ####
> #-----------------------------------#
> 
> graph(
+   Edge(state1 = "mu0",state2 = "mu0", penalty = 0, K = 3),
+   Edge(state1 = "mu0",state2 = "Coll", penalty = 10, type = "std"),
+   Edge(state1 = "Coll",state2 = "Coll", penalty = 0),
+   Edge(state1 = "Coll",state2 = "mu0", penalty = 0, type = "std", K = 3),
+   StartEnd(start = "mu0", end = c("mu0", "Coll")),
+   Node(state = "mu0", min = 0, max = 0)
+ )
  state1 state2  type parameter penalty   K  a min max
1    mu0    mu0  null         1       0   3  0  NA  NA
2    mu0   Coll   std         0      10 Inf  0  NA  NA
3   Coll   Coll  null         1       0 Inf  0  NA  NA
4   Coll    mu0   std         0       0   3  0  NA  NA
5    mu0   <NA> start        NA      NA  NA NA  NA  NA
6    mu0   <NA>   end        NA      NA  NA NA  NA  NA
7   Coll   <NA>   end        NA      NA  NA NA  NA  NA
8    mu0    mu0  node        NA      NA  NA NA   0   0
> 
> #-----------------------------------#
> ## chunk 3 : Some default graphs. ###
> #-----------------------------------#
> 
> graph(type = "isotonic", penalty = 12)
  state1 state2 type parameter penalty   K a min max
1    Iso    Iso null         1       0 Inf 0  NA  NA
2    Iso    Iso   up         0      12 Inf 0  NA  NA
> 
> ## chunk 4 : Gaussian model with an up-down graph
> set.seed(75)
> n <- 1000
> myData <- dataGenerator(n, c(0.1, 0.3, 0.5, 0.8, 1), c(1, 2, 1, 3, 1), sigma = 1)
> myGraph <- graph(penalty = 2 * log(n), type = "updown")
> gfpop(data = myData, mygraph = myGraph, type = "mean")
$changepoints
[1]  108  295  500  800 1000

$states
[1] "Dw" "Up" "Dw" "Up" "Dw"

$forced
[1] 0 0 0 0

$parameters
[1] 1.044920 2.047202 1.017550 2.916826 1.030938

$globalCost
[1] 963.0278

attr(,"class")
[1] "gfpop"
> 
> ## chunk 5 : Gaussian Robust biweight model with an up-down graph
> n <- 1000
> chgtpt <- c(0.1, 0.3, 0.5, 0.8, 1)
> mydata <- dataGenerator(n, chgtpt, c(0, 1, 0, 1, 0), sigma = 1)
> mydata <- mydata + 5*(rbinom(n, 1, 0.05)) - 5*(rbinom(n, 1, 0.05))
> beta <- 2*log(n)
> myGraph <- graph(
+   Edge("Dw", "Up", type = "up", penalty = beta, gap = 1, K = 3),
+   Edge("Up", "Dw", type = "down", penalty = beta, gap = 1, K = 3),
+   Edge("Dw", "Dw", type = "null", K = 3),
+   Edge("Up", "Up", type = "null", K = 3),
+   StartEnd(start = "Dw", end = "Dw"))
> gfpop(data =  mydata, mygraph = myGraph, type = "mean")
$changepoints
[1]  102  311  500  806 1000

$states
[1] "Dw" "Up" "Dw" "Up" "Dw"

$forced
[1] 1 0 0 0

$parameters
[1] -0.02296768  0.97703232 -0.03434534  1.00246359 -0.03334062

$globalCost
[1] 1097.364

attr(,"class")
[1] "gfpop"
> 
> #--------------------------------------------------#
> ## chunk 6 : Poisson model with isotonic up graph ##
> #--------------------------------------------------#
> 
> n <- 1000
> chgtpt <- c(0.1, 0.3, 0.5, 0.8, 1)
> mydata <- dataGenerator(n, chgtpt, c(1, 3, 5, 7, 12), sigma = 1, type = "poisson")
> beta <- 2*log(n)
> myGraph <- graph(type = "isotonic", gap = 2)
> gfpop(data =  mydata, mygraph = myGraph, type = "poisson")
$changepoints
[1]    2   99  297  796 1000

$states
[1] "Iso" "Iso" "Iso" "Iso" "Iso"

$forced
[1] 1 0 1 1

$parameters
[1]  0.4693878  0.9387755  2.9840954  5.9681909 11.9363817

$globalCost
[1] -5832.845

attr(,"class")
[1] "gfpop"
> 
> #----------------------------------------------------------#
> ## chunk 7 : Negative binomial model with 3-segment graph ##
> #----------------------------------------------------------#
> 
> mygraph <- graph(
+   Edge("1", "2", type = "std", penalty = 0),
+   Edge("2", "3", type = "std", penalty = 0),
+   StartEnd(start = "1", end = "3"), 
+   all.null.edges = TRUE)
> data <- dataGenerator(n = 1000, changepoints = c(0.3,0.7,1),
+                       parameters = c(0.2,0.25,0.3), type = "negbin", sigma = 1)
> gfpop(data, mygraph, type = "negbin")
$changepoints
[1]  300  714 1000

$states
[1] "1" "2" "3"

$forced
[1] 0 0

$parameters
[1] 0.2117808 0.2652162 0.3212748

$globalCost
[1] 2193.216

attr(,"class")
[1] "gfpop"
> 
> #--------------------------------------------------#
> ## chunk 8 : A plotting function ###################
> #--------------------------------------------------#
> 
> 
> 
> pdf( "figure10.pdf" )
> 
> data <- dataGenerator(1000, c(0.4, 0.8, 1), c(1, 2, 1), "mean", sigma = 3)
> g <- gfpop(data, 
+            graph(type = "std", penalty = 2*sdDiff(data)^2*log(1000)), 
+            type = "mean")
> res <- plot(x = g, data = data)
> print(res)
NULL
> 
> # Close device
> dev.off()
null device 
          1 
> 
> proc.time()
utilisateur     système      écoulé 
     30.271       2.320      32.943 
